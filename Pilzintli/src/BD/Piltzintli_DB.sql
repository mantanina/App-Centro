-- MySQL Script generated by MySQL Workbench
-- Thu Mar 10 10:55:07 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Piltzintli
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Piltzintli
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Piltzintli` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ;
USE `Piltzintli` ;

-- -----------------------------------------------------
-- Table `Piltzintli`.`roles_usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Piltzintli`.`roles_usuario` (
  `id_roles_usuario` INT NOT NULL AUTO_INCREMENT,
  `rol_usuario` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id_roles_usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Piltzintli`.`usuarios_login`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Piltzintli`.`usuarios_login` (
  `id_usuarios_login` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(20) NOT NULL,
  `password` VARCHAR(20) NOT NULL,
  `status` TINYINT NOT NULL DEFAULT 1,
  `roles_usuario_id_roles_usuario` INT NOT NULL,
  PRIMARY KEY (`id_usuarios_login`),
  INDEX `fk_usuarios_login_roles_usuario_idx` (`roles_usuario_id_roles_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_usuarios_login_roles_usuario`
    FOREIGN KEY (`roles_usuario_id_roles_usuario`)
    REFERENCES `Piltzintli`.`roles_usuario` (`id_roles_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Piltzintli`.`especialistas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Piltzintli`.`especialistas` (
  `id_especialistas` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido_paterno` VARCHAR(45) NOT NULL,
  `apellido_materno` VARCHAR(45) NOT NULL,
  `profesion` VARCHAR(45) NOT NULL,
  `cedula` VARCHAR(10) NOT NULL,
  `especialidad` VARCHAR(45) NOT NULL,
  `telefono_contacto` VARCHAR(10) NOT NULL,
  `correo_electronico` VARCHAR(50) NOT NULL,
  `status` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`id_especialistas`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Piltzintli`.`informacion_padres`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Piltzintli`.`informacion_padres` (
  `id_informacion_padres` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido_paterno` VARCHAR(45) NOT NULL,
  `apellido_materno` VARCHAR(45) NOT NULL,
  `calle_domicilio` VARCHAR(30) NOT NULL,
  `numero_domicilio` VARCHAR(8) NOT NULL,
  `colonia_domicilio` VARCHAR(25) NOT NULL,
  `codigo_postal` VARCHAR(5) NOT NULL,
  `municipio_domicilio` VARCHAR(40) NOT NULL,
  `estado_domicilio` VARCHAR(25) NOT NULL,
  `telefono_contacto` VARCHAR(10) NOT NULL,
  `correo_electronico` VARCHAR(50) NULL,
  PRIMARY KEY (`id_informacion_padres`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Piltzintli`.`informacion_pacientes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Piltzintli`.`informacion_pacientes` (
  `id_informacion_pacientes` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido_paterno` VARCHAR(45) NOT NULL,
  `apellido_materno` VARCHAR(45) NOT NULL,
  `fecha_nacimiento` DATE NOT NULL,
  `escolaridad` VARCHAR(14) NOT NULL,
  `diagnostico` VARCHAR(45) NULL,
  `status` TINYINT NOT NULL DEFAULT 1,
  `informacion_padres_id_informacion_padres` INT NOT NULL,
  PRIMARY KEY (`id_informacion_pacientes`),
  INDEX `fk_informacion_pacientes_informacion_padres1_idx` (`informacion_padres_id_informacion_padres` ASC) VISIBLE,
  CONSTRAINT `fk_informacion_pacientes_informacion_padres1`
    FOREIGN KEY (`informacion_padres_id_informacion_padres`)
    REFERENCES `Piltzintli`.`informacion_padres` (`id_informacion_padres`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Piltzintli`.`tipo_consultas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Piltzintli`.`tipo_consultas` (
  `id_tipo_consultas` INT NOT NULL,
  `tipo_consulta` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`id_tipo_consultas`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Piltzintli`.`terapias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Piltzintli`.`terapias` (
  `id_terapias` INT NOT NULL AUTO_INCREMENT,
  `terapia` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id_terapias`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Piltzintli`.`consultas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Piltzintli`.`consultas` (
  `id_consultas` INT NOT NULL AUTO_INCREMENT,
  `fecha` DATE NOT NULL,
  `hora` TIME NOT NULL,
  `especialistas_id_especialistas` INT NOT NULL,
  `informacion_pacientes_id_informacion_pacientes` INT NOT NULL,
  `tipo_consultas_id_tipo_consultas` INT NOT NULL,
  `terapias_id_terapias` INT NOT NULL,
  PRIMARY KEY (`id_consultas`),
  INDEX `fk_consultas_especialistas1_idx` (`especialistas_id_especialistas` ASC) VISIBLE,
  INDEX `fk_consultas_informacion_pacientes1_idx` (`informacion_pacientes_id_informacion_pacientes` ASC) VISIBLE,
  INDEX `fk_consultas_tipo_consultas1_idx` (`tipo_consultas_id_tipo_consultas` ASC) VISIBLE,
  INDEX `fk_consultas_terapias1_idx` (`terapias_id_terapias` ASC) VISIBLE,
  CONSTRAINT `fk_consultas_especialistas1`
    FOREIGN KEY (`especialistas_id_especialistas`)
    REFERENCES `Piltzintli`.`especialistas` (`id_especialistas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_consultas_informacion_pacientes1`
    FOREIGN KEY (`informacion_pacientes_id_informacion_pacientes`)
    REFERENCES `Piltzintli`.`informacion_pacientes` (`id_informacion_pacientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_consultas_tipo_consultas1`
    FOREIGN KEY (`tipo_consultas_id_tipo_consultas`)
    REFERENCES `Piltzintli`.`tipo_consultas` (`id_tipo_consultas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_consultas_terapias1`
    FOREIGN KEY (`terapias_id_terapias`)
    REFERENCES `Piltzintli`.`terapias` (`id_terapias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Piltzintli`.`pagos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Piltzintli`.`pagos` (
  `id_pagos` INT NOT NULL AUTO_INCREMENT,
  `cantidad` INT NOT NULL,
  `consultas_id_consultas` INT NOT NULL,
  PRIMARY KEY (`id_pagos`),
  INDEX `fk_pagos_consultas1_idx` (`consultas_id_consultas` ASC) VISIBLE,
  CONSTRAINT `fk_pagos_consultas1`
    FOREIGN KEY (`consultas_id_consultas`)
    REFERENCES `Piltzintli`.`consultas` (`id_consultas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Piltzintli`.`inventario_bodega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Piltzintli`.`inventario_bodega` (
  `id_inventario` INT NOT NULL AUTO_INCREMENT,
  `nombre_articulo` VARCHAR(45) NOT NULL,
  `cantidad` INT NOT NULL,
  `estado` VARCHAR(10) NOT NULL,
  `cantidad_deseable` INT NOT NULL,
  PRIMARY KEY (`id_inventario`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
