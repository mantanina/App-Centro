/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Consultas;

import ConexionDB.DbConnection;
import Especialista.DatosEspecialista;
import Menu.Principal;
import com.formdev.flatlaf.FlatLightLaf;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author 1234
 */
public class modificar_Cita extends javax.swing.JFrame {

    DatosCita dc = new DatosCita();

    public modificar_Cita() throws IOException {
        initComponents();

        this.setLocationRelativeTo(null);

        BufferedImage imagenIcono = ImageIO.read(getClass().getResource("/Recursos/logo_bcklss.png"));
        this.setTitle("Modificaciones Citas");
        this.setIconImage(imagenIcono);

        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);

        this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                int opc = JOptionPane.showConfirmDialog(null, "Regresar al Men√∫ Principal?", "Regresar", JOptionPane.YES_OPTION, JOptionPane.INFORMATION_MESSAGE);

                if (opc == JOptionPane.YES_OPTION) {

                    try {
                        new Menu.Principal().setVisible(true);
                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    dispose();
                }

            }

        });

        campo_Observaciones.setEditable(false);
        campo_fecha.setEditable(false);
        campo_hora.setEditable(false);
        campo_idEspecialista.setEditable(false);
        campo_idPaciente.setEditable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btn_res = new javax.swing.JButton();
        btn_bacck = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        campo_hora = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        campo_fecha = new javax.swing.JTextField();
        campo_idPaciente = new javax.swing.JTextField();
        campo_idEspecialista = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        campo_Observaciones = new javax.swing.JTextArea();
        campo_IDCita = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btn_buscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("Modificar Cita");

        btn_res.setText("Guardar");
        btn_res.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resActionPerformed(evt);
            }
        });

        btn_bacck.setText("Regresar");
        btn_bacck.setNextFocusableComponent(campo_hora);
        btn_bacck.setOpaque(false);
        btn_bacck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bacckActionPerformed(evt);
            }
        });

        jLabel2.setText("Hora: (HH:MM:SS)");

        campo_hora.setNextFocusableComponent(campo_fecha);
        campo_hora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo_horaActionPerformed(evt);
            }
        });

        jLabel6.setText("Fecha: (aaaa-mm-dd)  ");

        campo_fecha.setNextFocusableComponent(campo_idPaciente);
        campo_fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo_fechaActionPerformed(evt);
            }
        });

        campo_idPaciente.setNextFocusableComponent(campo_idEspecialista);
        campo_idPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo_idPacienteActionPerformed(evt);
            }
        });

        campo_idEspecialista.setNextFocusableComponent(btn_res);
        campo_idEspecialista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo_idEspecialistaActionPerformed(evt);
            }
        });

        jLabel7.setText("ID Paciente");

        jLabel8.setText("ID Especialista");

        jLabel9.setText("Observaciones");

        campo_Observaciones.setColumns(20);
        campo_Observaciones.setRows(5);
        jScrollPane1.setViewportView(campo_Observaciones);

        campo_IDCita.setNextFocusableComponent(campo_fecha);
        campo_IDCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campo_IDCitaActionPerformed(evt);
            }
        });

        jLabel3.setText("Numero de Cita (ID)");

        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(campo_hora, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(campo_idPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(campo_idEspecialista, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btn_buscar))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(btn_bacck)
                                            .addGap(18, 18, 18)
                                            .addComponent(btn_res)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(campo_IDCita, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(campo_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLabel1)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(campo_IDCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(campo_hora, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(campo_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campo_idPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campo_idEspecialista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(7, 7, 7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btn_buscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_bacck)
                    .addComponent(btn_res))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_resActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resActionPerformed

        DbConnection conexion;
        Statement estatuto;
        String solicitudSQL;

        String hora = campo_hora.getText();
        String fecha = campo_fecha.getText();
        String idCita = campo_IDCita.getText();
        String idPaciente = campo_idPaciente.getText();
        String idEspecialista = campo_idEspecialista.getText();
        String observaciones = campo_Observaciones.getText();

        try {

            conexion = new DbConnection();
            estatuto = conexion.getConnection().createStatement();
            // Agrega la hora y fecha 
            solicitudSQL = "UPDATE consulta SET fecha = '" + fecha + "' , hora = '" + hora + "', paciente_id = '" + idPaciente + "', especialista_id = '" + idEspecialista + "', observaciones = '" + observaciones + "' where id like " + idCita;

            estatuto.executeUpdate(solicitudSQL);
            /// Indica que se a actualizada la agenda de especialistas   
            JOptionPane.showMessageDialog(null, "Cita Modificada con Exito!", "Informacion", JOptionPane.INFORMATION_MESSAGE);

            estatuto.close();
            conexion.desconectar();

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, "Error al Modificar!", "Informacion", JOptionPane.INFORMATION_MESSAGE);

        }

    }//GEN-LAST:event_btn_resActionPerformed

    private void btn_bacckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bacckActionPerformed
        int opc = JOptionPane.showConfirmDialog(null, "Regresar al Men√∫ Principal?", "Regresar", JOptionPane.YES_OPTION, JOptionPane.INFORMATION_MESSAGE);

        if (opc == JOptionPane.YES_OPTION) {

            try {
                new Menu.Principal().setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            dispose();
        }
    }//GEN-LAST:event_btn_bacckActionPerformed

    private void campo_horaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo_horaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo_horaActionPerformed

    private void campo_fechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo_fechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo_fechaActionPerformed

    private void campo_idPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo_idPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo_idPacienteActionPerformed

    private void campo_idEspecialistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo_idEspecialistaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo_idEspecialistaActionPerformed

    private void campo_IDCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campo_IDCitaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campo_IDCitaActionPerformed

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        DbConnection conexion;
        Statement estatuto;
        String solicitudSQL;
        ResultSet resultado;

        try {
            conexion = new DbConnection();
            estatuto = conexion.getConnection().createStatement();

            solicitudSQL = "SELECT id, fecha, hora, paciente_id, especialista_id, observaciones FROM "
                    + "consulta where id like " + campo_IDCita.getText();
            System.out.println(solicitudSQL);

            resultado = estatuto.executeQuery(solicitudSQL);

            while (resultado.next()) {

                campo_IDCita.setText(String.valueOf(resultado.getInt("id")));
                campo_fecha.setText(resultado.getString("fecha"));
                campo_hora.setText(resultado.getString("hora"));
                campo_idPaciente.setText(String.valueOf(resultado.getInt("paciente_id")));
                campo_idEspecialista.setText(String.valueOf(resultado.getInt("especialista_id")));
                campo_Observaciones.setText(resultado.getString("observaciones"));
            }

            estatuto.close();
            conexion.desconectar();

            campo_Observaciones.setEditable(true);
            campo_fecha.setEditable(true);
            campo_hora.setEditable(true);
            campo_idEspecialista.setEditable(true);
            campo_idPaciente.setEditable(true);

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, "No se Encontraron Datos!", "Informacion", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btn_buscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new modificar_Cita().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(modificar_Cita.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_bacck;
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_res;
    private javax.swing.JTextField campo_IDCita;
    private javax.swing.JTextArea campo_Observaciones;
    private javax.swing.JTextField campo_fecha;
    private javax.swing.JTextField campo_hora;
    private javax.swing.JTextField campo_idEspecialista;
    private javax.swing.JTextField campo_idPaciente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
